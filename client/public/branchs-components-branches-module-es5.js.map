{"version":3,"sources":["webpack:///src/app/pages/admin/branchs/components/branches.module.ts","webpack:///src/app/pages/admin/branchs/components/branchs-routing.module.ts","webpack:///src/app/pages/admin/branchs/components/branchs/branchs.component.ts","webpack:///src/app/pages/admin/branchs/components/branchs/branchs.component.html","webpack:///src/app/pages/admin/branchs/components/form-branchs/form-branchs.component.ts","webpack:///src/app/pages/admin/branchs/components/form-branchs/form-branchs.component.html"],"names":["BranchsModule","declarations","imports","routes","path","component","BranchsRoutingModule","forChild","exports","BranchsComponent","router","firestoreService","cookieService","branchs","userAuthUid","get","getBranchs","getBranchsByCreated","then","query","docs","forEach","doc","service","data","uid","id","push","console","log","business","navigate","state","status","Info","updateBy","updateDate","Date","updateBranchs","successAlert","title","body","fire","resp","addBranch","selector","templateUrl","styleUrls","FormBranchsComponent","route","fb","storage","editForm","saveButton","users","files","userEditInfo","getCurrentNavigation","extras","params","subscribe","Boolean","getBusiness","initForm","getPatchValues","branchsForm","group","name","user","patchValue","getBusinessByCreated","ev","element","target","value","businessInfo","valid","branch","handleCreatebranch","handleUpdateBranch","createBy","createDate","createBranchs","InfoBranch","goCancel","createbranch"],"mappings":"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","file":"branchs-components-branches-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//Route\nimport { BranchsRoutingModule } from './branchs-routing.module';\n\n// Components\nimport { BranchsComponent } from './branchs/branchs.component';\nimport { FormBranchsComponent } from './form-branchs/form-branchs.component';\n\n// Libs\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { CountToModule } from 'angular-count-to';\n\n@NgModule({\n  declarations: [BranchsComponent, FormBranchsComponent],\n  imports: [\n    CommonModule,\n    BranchsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxDatatableModule,\n    SharedModule,\n    CountToModule\n  ]\n})\nexport class BranchsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { BranchsComponent } from './branchs/branchs.component';\nimport { FormBranchsComponent } from './form-branchs/form-branchs.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BranchsComponent\n  },\n  {\n    path: 'new',\n    component: FormBranchsComponent\n  },\n  {\n    path: 'edit/:status',\n    component: FormBranchsComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BranchsRoutingModule { }\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport Swal from 'sweetalert2';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  CookieService\n} from 'ngx-cookie-service';\n// Services\nimport {\n  FirestoreService\n} from 'src/app/core/services/firestore/firestore.service';\nimport {\n  QuerySnapshot,\n  QueryDocumentSnapshot\n} from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-branchs',\n  templateUrl: './branchs.component.html',\n  styleUrls: ['./branchs.component.scss']\n})\nexport class BranchsComponent implements OnInit {\n  branchs = [];\n\n  // Users\n  userAuthUid: string;\n\n  constructor(\n    private router: Router,\n    private firestoreService: FirestoreService,\n    private cookieService: CookieService,\n  ) {\n    this.userAuthUid = this.cookieService.get('uid');\n  }\n\n  ngOnInit(): void {\n    this.getBranchs();\n  }\n\n  getBranchs() {\n    this.branchs = [];\n    this.firestoreService.getBranchsByCreated(this.userAuthUid)\n      .then((query: QuerySnapshot < any > ) => {\n        query.docs.forEach((doc: QueryDocumentSnapshot < any > ) => {\n          const service = doc.data();\n          service.uid = doc.id;\n          this.branchs.push(service);\n        });\n      });\n    console.log(this.branchs)\n  }\n\n  goEdit(business){\n    this.router.navigate(['./admin/branchs/edit', true], {\n      state: business\n    });\n  }\n\n  statusServiceUpdate(uid:any, status){\n    const Info = {\n      status: status,\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    this.firestoreService.updateBranchs(Info, uid).then(() => {\n      this.successAlert('Sucursal Actualizada', 'La sucursal fue actualizada con exito.');\n      this.getBranchs();  \n    });\n  }\n\n  addBranch() {\n    this.router.navigate(['./admin/branchs/new']);\n  }\n\n  successAlert(title: string, body: string) {\n    Swal.fire(\n      title,\n      body,\n      'success'\n    ).then((resp => {\n      this.router.navigate(['./admin/branchs'])\n    }))\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <label class=\"col-sm-8 col-form-label title\">Sucursales de empresas</label>\n            <div class=\"row\">\n                <select class=\"form-control input\" id=\"uidUser\">\n                    <option hidden value=\"\" selected>ACCIONES EN LOTE</option>\n                    <option value=\"user\">Accion 1</option>\n                    <option value=\"user\">Accion 2</option>\n                    <option value=\"user\">Accion 3</option>\n                </select> &nbsp;\n                <button class=\"btn boton\">APLICAR</button>\n                <button class=\"btn boton2\" (click)=\"addBranch()\">AÑADIR SUCURSAL</button>\n            </div>\n            <div class=\"table-responsive table_use\">\n                <table class=\"table\" id=\"excel-table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Empresa</th>\n                            <th scope=\"col\">Sucursal</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Opciones</th>\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let branch of branchs; index as i\"> \n                        <tr>\n                            <th scope=\"row\"> {{i+1}} </th>\n                            <td class=\"file-open\"> {{ branch.business.name }} </td>\n                            <td> {{ branch.name }} </td>\n                            <td *ngIf=\"branch.status === 1\" class=\"active\">Activo</td>\n                            <td *ngIf=\"branch.status === 0\" class=\"cancel\">Cancelado</td>\n                            <!-- <td >Administrador</td> -->\n                            <td>\n                                <!-- <app-feather-icons class=\"icon-edit\" icon=\"edit\"></app-feather-icons> &nbsp; -->\n                                <app-feather-icons (click)=\"goEdit(branch)\" style=\"color: blue;\" icon=\"edit\"></app-feather-icons> &nbsp;\n                                <app-feather-icons *ngIf=\"branch.status === 0\" (click)=\"statusServiceUpdate(branch.uid, 1)\" style=\"color: red;\" icon=\"minus-circle\"></app-feather-icons>\n                                <app-feather-icons *ngIf=\"branch.status === 1\" (click)=\"statusServiceUpdate(branch.uid, 0)\" style=\"color: green;\" icon=\"plus-circle\"></app-feather-icons>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    </div>\n</div>","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\n\n// Libs\nimport {\n  CookieService\n} from 'ngx-cookie-service';\nimport Swal from 'sweetalert2'\nimport {\n  QuerySnapshot,\n  QueryDocumentSnapshot\n} from '@angular/fire/firestore';\nimport {\n  FirestoreService\n} from 'src/app/core/services/firestore/firestore.service';\nimport {\n  AngularFireStorage\n} from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-form-branchs',\n  templateUrl: './form-branchs.component.html',\n  styleUrls: ['./form-branchs.component.scss']\n})\nexport class FormBranchsComponent implements OnInit {\n  branchsForm: FormGroup;\n  userEditInfo: any;\n  editForm = false;\n\n  // User Login\n  userAuthUid: string;\n  pathFile0: any;\n  saveButton: boolean = false;\n\n  users = [];\n  branch: any;\n  business: any;\n  businessInfo: any;\n  files = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private cookieService: CookieService,\n    //   private authService: AuthService,\n    private firestoreService: FirestoreService,\n    //   private utilsService: UtilsService\n    private storage: AngularFireStorage\n  ) {\n    this.userAuthUid = this.cookieService.get('uid');\n    this.userEditInfo = this.router.getCurrentNavigation().extras.state;\n    console.log(this.userEditInfo);\n    this.route.params.subscribe(params => {\n      this.editForm = Boolean(params['status']);\n    });\n    console.log(this.editForm);\n  }\n\n  ngOnInit(): void {\n    this.getBusiness();\n    this.initForm();\n    this.getPatchValues(this.userEditInfo);\n  }\n\n  initForm() {\n    this.branchsForm = this.fb.group({\n      name: ['', []],\n    })\n  }\n\n  getPatchValues(user: any) {\n    this.branchsForm.patchValue({\n      name: user.name,\n    });\n  }\n  docvalue : any;\n\n  getBusiness() {\n    this.business = [];\n    this.firestoreService.getBusinessByCreated(this.userAuthUid)\n      .then((query: QuerySnapshot < any > ) => {\n        query.docs.forEach((doc: QueryDocumentSnapshot < any > ) => {\n          const service = doc.data();\n          service.uid = doc.id;\n          this.business.push(service);\n        });\n      });\n    console.log(this.business);\n  }\n\n  async getSelection(ev) {\n    this.business.forEach(element => {\n      if (element.uid === ev.target.value){\n        this.businessInfo = element;\n      }\n    });\n    // await this.firestoreService.getBusinessByUid(ev.target.value).then(business => {\n    //   this.businessInfo = business.data();\n    //   console.log(this.businessInfo);\n    // });\n  }\n\n  successAlert(title: string, body: string) {\n    Swal.fire(\n      title,\n      body,\n      'success'\n    ).then((resp => {\n      this.router.navigate(['./admin/branchs'])\n    }))\n  }\n\n  goCancel() {\n    this.router.navigate(['./admin/branchs']);\n  }\n\n  // CREATE BRANCH\n\n  createbranch() {\n    if (this.branchsForm.valid) {\n      const branch = this.branchsForm.value;\n      this.branch = branch;\n      if (!this.editForm) {\n        this.saveButton = true;\n        console.log(branch);\n        this.handleCreatebranch(branch)\n      } else {\n        console.log(branch);\n        this.handleUpdateBranch(branch);\n      }\n    }\n  }\n\n  handleCreatebranch(branch: any) {\n    const Info = {\n      business: this.businessInfo,\n      name: branch.name,\n      status: 1,\n      createBy: this.userAuthUid,\n      createDate: new Date(),\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    console.log(Info);\n    this.firestoreService.createBranchs(Info).then(() => {\n      this.successAlert('Sucursal Guardada', 'La sucursal fue guardado con éxito.');\n      this.router.navigate(['./admin/branchs'])\n    });\n  }\n\n  handleUpdateBranch(InfoBranch: any) {\n    const Info = {\n      name: InfoBranch.name,\n      status: 1,\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    this.firestoreService.updateBranchs(Info, this.userEditInfo.uid).then(() => {\n      this.successAlert('Sucursal Actualizada', 'El usuario fue actualizado con exito.');\n      this.router.navigate(['./admin/branchs'])\n    });\n  }\n\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"row\">\n                <label class=\"col-sm-8 col-form-label title\">GESTOR DE SUCURSALES</label>\n                <button class=\"btn btn-cancel\" (click)=\"goCancel()\">CANCELAR</button>\n                <button class=\"btn btn-add\" (click)=\"createbranch()\">GUARDAR</button>\n            </div>\n        </div>\n\n        <div class=\"col-11 bg\">\n            <form class=\"needs-validation\" novalidate>\n                <br>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom07\">Empresa asignada</label>\n                    <select *ngIf=\"!editForm\" (change)=\"getSelection($event)\" class=\"form-control\" id=\"manager\">\n                      <option hidden value=\"\" selected>Selecciona la empresa...</option>\n                      <option  *ngFor=\"let busines of business; index as i\" value=\"{{busines.uid}}\">{{ busines.name }}</option>\n                    </select>\n                    <select *ngIf=\"editForm\" readonly (change)=\"getSelection($event)\" class=\"form-control\" id=\"manager\">\n                        <option value=\"\">{{ userEditInfo.business.name }}</option>\n                      </select>\n                  </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom01\">Nombre de la sucursal</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Nombre de la sucursal\"\n                        [formControl]=\"branchsForm.controls['name']\" required>\n                </div>\n                <br>\n            </form>\n        </div>\n        <br>\n        <br>\n        <div class=\"row center\">\n            <button class=\"btn cancel\" (click)=\"goCancel()\">CANCELAR</button> &nbsp;\n            <button class=\"btn add\" (click)=\"createbranch()\">GUARDAR</button>\n        </div>\n        <br>\n    </div>\n</div>"]}