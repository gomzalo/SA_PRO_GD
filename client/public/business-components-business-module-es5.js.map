{"version":3,"sources":["webpack:///src/app/pages/admin/business/components/business-routing.module.ts","webpack:///src/app/pages/admin/business/components/business.module.ts","webpack:///src/app/pages/admin/business/components/business/business.component.ts","webpack:///src/app/pages/admin/business/components/business/business.component.html","webpack:///src/app/pages/admin/business/components/form-business/form-business.component.ts","webpack:///src/app/pages/admin/business/components/form-business/form-business.component.html"],"names":["routes","path","component","BusinessRoutingModule","forChild","imports","exports","BusinessModule","declarations","BusinessComponent","router","firestoreService","cookieService","business","userAuthUid","get","getBusiness","navigate","getBusinessByCreated","then","query","docs","forEach","doc","service","data","uid","id","push","console","log","state","status","Info","updateBy","updateDate","Date","updateBusiness","successAlert","title","body","fire","resp","addBusiness","selector","templateUrl","styleUrls","FormBusinessComponent","route","fb","storage","editForm","saveButton","users","files","userEditInfo","getCurrentNavigation","extras","params","subscribe","Boolean","initForm","getPatchValues","businessForm","group","name","manager","user","patchValue","event","pathFile0","target","valid","value","handleBusiness","handleUpdateBusiness","uploadFileBusiness","handleCreateBusiness","file","createFileBusines","namesArray","split","type","length","typeValue","code","Math","random","toString","substring","ref","child","put","getDownloadURL","toPromise","businessInfo","icon","createBy","createDate","createBusiness","goCancel","fileBusiness"],"mappings":"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","file":"business-components-business-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { BusinessComponent } from './business/business.component';\nimport { FormBusinessComponent } from './form-business/form-business.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BusinessComponent\n  },\n  {\n    path: 'new',\n    component: FormBusinessComponent\n  },\n  {\n    path: 'edit/:status',\n    component: FormBusinessComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BusinessRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//Route\nimport { BusinessRoutingModule } from './business-routing.module';\n\n// Components\nimport { BusinessComponent } from './business/business.component';\n\n// Libs\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { CountToModule } from 'angular-count-to';\nimport { FormBusinessComponent } from './form-business/form-business.component';\n\n@NgModule({\n  declarations: [BusinessComponent, FormBusinessComponent],\n  imports: [\n    CommonModule,\n    BusinessRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxDatatableModule,\n    SharedModule,\n    CountToModule\n  ]\n})\nexport class BusinessModule { }\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport Swal from 'sweetalert2';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  CookieService\n} from 'ngx-cookie-service';\n// Services\nimport {\n  FirestoreService\n} from 'src/app/core/services/firestore/firestore.service';\nimport {\n  QuerySnapshot,\n  QueryDocumentSnapshot\n} from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-business',\n  templateUrl: './business.component.html',\n  styleUrls: ['./business.component.scss']\n})\nexport class BusinessComponent implements OnInit {\n  business = [];\n\n  // Users\n  userAuthUid: string;\n\n  constructor(\n    private router: Router,\n    private firestoreService: FirestoreService,\n    private cookieService: CookieService,\n  ) {\n    this.userAuthUid = this.cookieService.get('uid');\n  }\n\n  ngOnInit(): void {\n    this.getBusiness();\n  }\n\n  addBusiness() {\n    this.router.navigate(['./admin/business/new']);\n  }\n\n  getBusiness() {\n    this.business = [];\n    this.firestoreService.getBusinessByCreated(this.userAuthUid)\n      .then((query: QuerySnapshot < any > ) => {\n        query.docs.forEach((doc: QueryDocumentSnapshot < any > ) => {\n          const service = doc.data();\n          service.uid = doc.id;\n          this.business.push(service);\n        });\n      });\n    console.log(this.business)\n  }\n\n  goEdit(business){\n    this.router.navigate(['./admin/business/edit', true], {\n      state: business\n    });\n  }\n\n  statusServiceUpdate(uid:any, status){\n    const Info = {\n      status: status,\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    this.firestoreService.updateBusiness(Info, uid).then(() => {\n      this.successAlert('Empresa Actualizada', 'La empresa fue actualizada con exito.');\n      this.getBusiness();  \n    });\n  }\n\n  successAlert(title: string, body: string) {\n    Swal.fire(\n      title,\n      body,\n      'success'\n    ).then((resp => {\n      this.router.navigate(['./admin/business'])\n    }))\n  }\n\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <label class=\"col-sm-2 col-form-label title\">Empresas</label>\n            <div class=\"row\">\n                <select class=\"form-control input\" id=\"uidUser\">\n                    <option hidden value=\"\" selected>ACCIONES EN LOTE</option>\n                    <option value=\"user\">Accion 1</option>\n                    <option value=\"user\">Accion 2</option>\n                    <option value=\"user\">Accion 3</option>\n                </select> &nbsp;\n                <button class=\"btn boton\">APLICAR</button>\n                <button class=\"btn boton2\" (click)=\"addBusiness()\">AÑADIR EMPRESA</button>\n            </div>\n            <div class=\"table-responsive table_use\">\n                <table class=\"table\" id=\"excel-table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Empresa</th>\n                            <th scope=\"col\">Encargado</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Opciones</th>\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let busines of business; index as i\"> \n                        <tr>\n                            <th scope=\"row\"> {{i+1}} </th>\n                            <td class=\"file-open\"> {{ busines.name }} </td>\n                            <td> {{ busines.manager }} </td>\n                            <td *ngIf=\"busines.status === 1\" class=\"active\">Activo</td>\n                            <td *ngIf=\"busines.status === 0\" class=\"cancel\">Cancelado</td>\n                            <!-- <td >Administrador</td> -->\n                            <td>\n                                <!-- <app-feather-icons class=\"icon-edit\" icon=\"edit\"></app-feather-icons> &nbsp; -->\n                                <app-feather-icons (click)=\"goEdit(busines)\" style=\"color: blue;\" icon=\"edit\"></app-feather-icons> &nbsp;\n                                <app-feather-icons *ngIf=\"busines.status === 0\" (click)=\"statusServiceUpdate(busines.uid, 1)\" style=\"color: red;\" icon=\"minus-circle\"></app-feather-icons>\n                                <app-feather-icons *ngIf=\"busines.status === 1\" (click)=\"statusServiceUpdate(busines.uid, 0)\" style=\"color: green;\" icon=\"plus-circle\"></app-feather-icons>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    </div>\n</div>","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\n\n// Libs\nimport {\n  CookieService\n} from 'ngx-cookie-service';\nimport Swal from 'sweetalert2'\nimport {\n  QuerySnapshot,\n  QueryDocumentSnapshot\n} from '@angular/fire/firestore';\nimport { FirestoreService } from 'src/app/core/services/firestore/firestore.service';\nimport {\n  AngularFireStorage\n} from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-form-business',\n  templateUrl: './form-business.component.html',\n  styleUrls: ['./form-business.component.scss']\n})\nexport class FormBusinessComponent implements OnInit {\n  businessForm: FormGroup;\n  userEditInfo: any;\n  editForm = false;\n\n  // User Login\n  userAuthUid: string;\n  pathFile0: any;\n  saveButton: boolean = false;\n\n  users = [];\n  business: any;\n  files = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private cookieService: CookieService,\n    //   private authService: AuthService,\n      private firestoreService: FirestoreService,\n    //   private utilsService: UtilsService\n    private storage: AngularFireStorage\n  ) { \n    this.userAuthUid = this.cookieService.get('uid');\n    this.userEditInfo = this.router.getCurrentNavigation().extras.state;\n    console.log(this.userEditInfo);\n    this.route.params.subscribe(params => {\n      this.editForm = Boolean(params['status']);\n    });\n    console.log(this.editForm);\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.getPatchValues(this.userEditInfo);\n  }\n\n  initForm() {\n    this.businessForm = this.fb.group({\n      name: ['', []],\n      manager: ['', []],\n    })\n  }\n\n  getPatchValues(user: any) {\n    this.businessForm.patchValue({\n      name: user.name,\n      manager: user.manager\n    });\n  }\n\n  fileBusiness(event) {\n    this.pathFile0 = event.target.files[0];\n  }\n\n  createBusiness(){\n    if (this.businessForm.valid) {\n      const business = this.businessForm.value;\n      this.business = business;\n      if (!this.editForm) {\n        this.saveButton = true;\n        console.log(business);\n        this.handleBusiness(business)\n      } else {\n        console.log(business);\n        this.handleUpdateBusiness(business);\n      }\n    }\n  }\n\n  async handleBusiness(business) {\n    await this.uploadFileBusiness();\n    this.handleCreateBusiness(business);\n  }\n\n  async uploadFileBusiness() {\n    const file = this.pathFile0;\n    if (file) {\n      console.log(file);\n      const path = await this.createFileBusines(file);\n      const namesArray = file.name.split('.');\n      const type = namesArray[namesArray.length - 1]\n      let typeValue = 'img';\n      if (type === 'pdf') typeValue = 'pdf';\n\n      this.files.push({\n        path,\n        type: typeValue\n      });\n    }\n  }\n\n  async createFileBusines(file: any) {\n    try {\n      const code = Math.random().toString(36).substring(7);\n      const name = Math.random().toString(36).substring(7) + code;\n      await this.storage.ref(`/business/${this.business.name}`).child(name).put(file);\n      return this.storage.ref(`business/${this.business.name}/${name}`).getDownloadURL().toPromise();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleCreateBusiness(businessInfo: any) {\n    const Info = {\n      name: businessInfo.name,\n      manager: businessInfo.manager,\n      icon: this.files[0],\n      status: 1,\n      createBy: this.userAuthUid,\n      createDate: new Date(),\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    console.log(Info);\n    this.firestoreService.createBusiness(Info).then(() => {\n      this.successAlert('Empresa Guardada', 'La empresa fue guardada con exito.');\n      this.router.navigate(['./admin/business'])\n    });\n\n  }\n\n  handleUpdateBusiness(businessInfo: any) {\n    const Info = {\n      name: businessInfo.name,\n      manager: businessInfo.manager,\n      status: 1,\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    this.firestoreService.updateBusiness(Info, this.userEditInfo.uid).then(() => {\n      this.successAlert('Usuario Actualizado', 'El usuario fue actualizado con exito.');\n      this.router.navigate(['./admin/business'])\n    });\n  }\n\n  successAlert(title: string, body: string) {\n    Swal.fire(\n      title,\n      body,\n      'success'\n    ).then((resp => {\n      this.router.navigate(['./admin/business'])\n    }))\n  }\n\n  goCancel(){\n    this.router.navigate(['./admin/business']);\n  }\n  \n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"row\">\n                <label class=\"col-sm-8 col-form-label title\">GESTOR DE EMPRESAS</label>\n                <button class=\"btn btn-cancel\" (click)=\"goCancel()\">CANCELAR</button>\n                <button class=\"btn btn-add\" (click)=\"createBusiness()\">GUARDAR</button>\n            </div>\n        </div>\n\n        <div class=\"col-11 bg\">\n            <form class=\"needs-validation\" novalidate>\n                <br>\n                <div class=\"col-md-12 mb-3\">\n                    <label for=\"validationCustom01\" class=\"title-span\">Nombre de la empresa</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Nombre de la empresa\"\n                        [formControl]=\"businessForm.controls['name']\" required>\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom01\">Nombre del encargado</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Nombre del encargado\"\n                        [formControl]=\"businessForm.controls['manager']\" required>\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                    <label class=\"title-span\">* Logo de la empresa</label>\n                    <input type=\"file\" class=\"form-control\" (change)=\"fileBusiness($event)\" accept=\".png,.jpg,.pdf\"\n                        [formControl]=\"businessForm.controls['icon']\" />\n                </div>\n                <br>\n            </form>\n        </div>\n        <br>\n        <br>\n        <div class=\"row center\">\n            <button class=\"btn cancel\" (click)=\"goCancel()\">CANCELAR</button> &nbsp;\n            <button class=\"btn add\" (click)=\"createBusiness()\">GUARDAR</button>\n        </div>\n        <br>\n    </div>\n</div>"]}