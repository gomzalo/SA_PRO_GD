{"version":3,"sources":["./src/app/core/services/auth/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACW;AAEtD,OAAO;AAC4C;;;;AAK5C,MAAM,WAAW;IAEtB,YACU,MAAuB,EACvB,aAA4B;QAD5B,WAAM,GAAN,MAAM,CAAiB;QACvB,kBAAa,GAAb,aAAa,CAAe;IAClC,CAAC;IAEL,UAAU;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,KAAa,EAAE,QAAgB;QACnC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACjE,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,aAAa,CAAC,QAAgB;QAC5B,6BAA6B;QAC7B,cAAc;IAChB,CAAC;IAED,UAAU,CAAC,IAAQ;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/E,CAAC;IAED,kBAAkB,CAAC,KAAY;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,WAAW;QACT,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC;QACzB,OAAO,IAAI,CAAC;IACd,CAAC;;sEA1CU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from  \"@angular/fire/auth\";\n\n// Libs\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private cookieService: CookieService\n  ) { }\n\n  isLoggedIn() {\n    return this.afAuth.authState;\n  }\n\n  login(email: string, password: string) {\n    console.log(email, password);\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.afAuth.signOut();\n  }\n\n  forgotPassword(email: string) {\n    return this.afAuth.sendPasswordResetEmail(email);\n  }\n\n  resetPassword(password: string){\n    // const user = this.afAuth.;\n    // await user.\n  }\n\n  createUser(user:any){\n    return this.afAuth.createUserWithEmailAndPassword(user.email, user.password);\n  }\n\n  resetPasswordEmail(email:string){\n    return this.afAuth.sendPasswordResetEmail(email);\n  }\n\n  getUserInfo(){\n    const uid = this.cookieService.get('uid');\n    const role = this.cookieService.get('roleType');\n    const info = {uid, role}; \n    return info;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}