{"version":3,"sources":["webpack:///src/app/pages/admin/proyects/components/form-proyects/form-proyects.component.ts","webpack:///src/app/pages/admin/proyects/components/form-proyects/form-proyects.component.html","webpack:///src/app/pages/admin/proyects/components/proyects-routing.module.ts","webpack:///src/app/pages/admin/proyects/components/proyects.module.ts","webpack:///src/app/pages/admin/proyects/components/proyects/proyects.component.ts","webpack:///src/app/pages/admin/proyects/components/proyects/proyects.component.html"],"names":["FormProyectsComponent","route","router","fb","cookieService","firestoreService","storage","editForm","saveButton","userAuthUid","get","userEditInfo","getCurrentNavigation","extras","state","console","log","params","subscribe","Boolean","getBusiness","initForm","getPatchValues","proyectForm","group","proyectName","proyectDescription","proyectActivities","proyectManager","user","patchValue","ev","target","value","business","forEach","element","uid","businessInfo","getBranchsByCreated","then","query","docs","doc","service","data","id","push","valid","proyect","handleCreateProyect","handleUpdateProyect","Info","status","createBy","createDate","Date","updateBy","updateDate","createProyects","successAlert","navigate","updateProyects","title","body","fire","resp","goCancel","createProyect","selector","templateUrl","styleUrls","routes","path","component","ProyectsRoutingModule","forChild","imports","exports","ProyectsModule","declarations","ProyectsComponent","proyects","getProyects","getProyectsByCreated","addProyect"],"mappings":"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","file":"proyects-components-proyects-module-es5.js","sourcesContent":["import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\n\n// Libs\nimport {\n  CookieService\n} from 'ngx-cookie-service';\nimport Swal from 'sweetalert2'\nimport {\n  QuerySnapshot,\n  QueryDocumentSnapshot\n} from '@angular/fire/firestore';\nimport { FirestoreService } from 'src/app/core/services/firestore/firestore.service';\nimport {\n  AngularFireStorage\n} from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-form-proyects',\n  templateUrl: './form-proyects.component.html',\n  styleUrls: ['./form-proyects.component.scss']\n})\nexport class FormProyectsComponent implements OnInit {\n  proyectForm: FormGroup;\n  userEditInfo: any;\n  editForm = false;\n\n  // User Login\n  userAuthUid: string;\n  saveButton: boolean = false;\n\n  proyect: any;\n  business : any;\n  businessInfo : any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private cookieService: CookieService,\n    //   private authService: AuthService,\n      private firestoreService: FirestoreService,\n    //   private utilsService: UtilsService\n    private storage: AngularFireStorage\n  ) { \n    this.userAuthUid = this.cookieService.get('uid');\n    this.userEditInfo = this.router.getCurrentNavigation().extras.state;\n    console.log(this.userEditInfo);\n    this.route.params.subscribe(params => {\n      this.editForm = Boolean(params['status']);\n    });\n    console.log(this.editForm);\n  }\n\n  ngOnInit(): void {\n    this.getBusiness();\n    this.initForm();\n    this.getPatchValues(this.userEditInfo);\n  }\n\n  initForm() {\n    this.proyectForm = this.fb.group({\n      proyectName:  ['', []],\n      proyectDescription:  ['', []],\n      proyectActivities:  ['', []],\n      proyectManager: ['', []],\n    })\n  }\n\n  getPatchValues(user: any) {\n    this.proyectForm.patchValue({\n      proyectName:  user.proyectName,\n      proyectDescription:  user.proyectDescription,\n      proyectActivities:  user.proyectActivities,\n      proyectManager: user.proyectManager,\n    });\n  }\n\n  async getSelection(ev) {\n    console.log(ev.target.value);\n    this.business.forEach(element => {\n      if (element.uid === ev.target.value){\n        this.businessInfo = element;\n        console.log(this.businessInfo);\n      }\n    });\n    // await this.firestoreService.getBusinessByUid(ev.target.value).then(business => {\n    //   this.businessInfo = business.data();\n    //   console.log(this.businessInfo);\n    // });\n  }\n\n  getBusiness() {\n    this.business = [];\n    this.firestoreService.getBranchsByCreated(this.userAuthUid)\n      .then((query: QuerySnapshot < any > ) => {\n        query.docs.forEach((doc: QueryDocumentSnapshot < any > ) => {\n          const service = doc.data();\n          service.uid = doc.id;\n          this.business.push(service);\n        });\n      });\n    console.log(this.business)\n  }\n\n\n  // CREATE PROYECT\n\n  createProyect(){\n    if (this.proyectForm.valid) {\n      const proyect = this.proyectForm.value;\n      this.proyect = proyect;\n      if (!this.editForm) {\n        this.saveButton = true;\n        console.log(proyect);\n        this.handleCreateProyect(proyect)\n      } else {\n        console.log(proyect);\n        this.handleUpdateProyect(proyect);\n      }\n    }\n  }\n\n  handleCreateProyect(businessInfo: any) {\n    const Info = {\n      business: this.businessInfo,\n      proyectName: businessInfo.proyectName,\n      proyectDescription: businessInfo.proyectDescription,\n      proyectActivities: businessInfo.proyectActivities,\n      proyectManager: businessInfo.proyectManager,\n      status: 1,\n      createBy: this.userAuthUid,\n      createDate: new Date(),\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    console.log(Info);\n    this.firestoreService.createProyects(Info).then(() => {\n      this.successAlert('Proyecto Guardado', 'El proyecto fue guardado con éxito.');\n      this.router.navigate(['./admin/proyects'])\n    });\n  }\n\n  // UPDATE PROYECT\n\n  handleUpdateProyect(businessInfo: any) {\n    const Info = {\n      proyectName: businessInfo.proyectName,\n      proyectDescription: businessInfo.proyectDescription,\n      proyectActivities: businessInfo.proyectActivities,\n      proyectManager: businessInfo.proyectManager,\n      status: 1,\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    this.firestoreService.updateProyects(Info, this.userEditInfo.uid).then(() => {\n      this.successAlert('Proyecto Actualizado', 'El proyecto fue actualizado con exito.');\n      this.router.navigate(['./admin/proyects'])\n    });\n  }\n\n  successAlert(title: string, body: string) {\n    Swal.fire(\n      title,\n      body,\n      'success'\n    ).then((resp => {\n      this.router.navigate(['./admin/proyects'])\n    }))\n  }\n\n  goCancel(){\n    this.router.navigate(['./admin/proyects']);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"row\">\n                <label class=\"col-sm-8 col-form-label title\">GESTOR DE PROYECTOS</label>\n                <button class=\"btn btn-cancel\" (click)=\"goCancel()\">CANCELAR</button>\n                <button class=\"btn btn-add\" (click)=\"createProyect()\">GUARDAR</button>\n            </div>\n        </div>\n\n        <div class=\"col-11 bg\">\n            <form class=\"needs-validation\" novalidate>\n                <br>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom01\">Nombre del proyecto</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Nombre del proyecto\"\n                        [formControl]=\"proyectForm.controls['proyectName']\" required>\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom01\">Descripción del proyecto</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Descripcion del proyecto\"\n                        [formControl]=\"proyectForm.controls['proyectDescription']\" required>\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom01\">Actividades del proyecto</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Actividades del proyecto\"\n                        [formControl]=\"proyectForm.controls['proyectActivities']\" required>\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom07\">Sucursal asignada</label>\n                    <select *ngIf=\"!editForm\" (change)=\"getSelection($event)\" class=\"form-control\" id=\"manager\">\n                      <option hidden value=\"\" selected>Selecciona la empresa...</option>\n                      <option  *ngFor=\"let busines of business; index as i\" value=\"{{busines.uid}}\">Sucursal: {{ busines.name }} - Empresa: {{ busines.business.name }}</option>\n                    </select>\n                    <select *ngIf=\"editForm\" readonly (change)=\"getSelection($event)\" class=\"form-control\" id=\"manager\">\n                        <option value=\"\">{{ userEditInfo.business.name }}</option>\n                      </select>\n                  </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label class=\"title-span\" for=\"validationCustom01\">Nombre del supervisor del proyecto</label>\n                    <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" placeholder=\"Nombre del encargado\"\n                        [formControl]=\"proyectForm.controls['proyectManager']\" required>\n                </div>\n                <br>\n            </form>\n        </div>\n        <br>\n        <br>\n        <div class=\"row center\">\n            <button class=\"btn cancel\" (click)=\"goCancel()\">CANCELAR</button> &nbsp;\n            <button class=\"btn add\" (click)=\"createProyect()\">GUARDAR</button>\n        </div>\n        <br>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ProyectsComponent } from './proyects/proyects.component';\nimport { FormProyectsComponent } from './form-proyects/form-proyects.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProyectsComponent\n  },\n  {\n    path: 'new',\n    component: FormProyectsComponent\n  },\n  {\n    path: 'edit/:status',\n    component: FormProyectsComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProyectsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//Route\nimport { ProyectsRoutingModule } from './proyects-routing.module';\n\n// Components\nimport { ProyectsComponent } from './proyects/proyects.component';\n\n// Libs\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { CountToModule } from 'angular-count-to';\nimport { FormProyectsComponent } from './form-proyects/form-proyects.component';\n\n@NgModule({\n  declarations: [ProyectsComponent, FormProyectsComponent],\n  imports: [\n    CommonModule,\n    ProyectsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxDatatableModule,\n    SharedModule,\n    CountToModule\n  ]\n})\nexport class ProyectsModule { }\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport Swal from 'sweetalert2';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  CookieService\n} from 'ngx-cookie-service';\n// Services\nimport {\n  FirestoreService\n} from 'src/app/core/services/firestore/firestore.service';\nimport {\n  QuerySnapshot,\n  QueryDocumentSnapshot\n} from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-proyects',\n  templateUrl: './proyects.component.html',\n  styleUrls: ['./proyects.component.scss']\n})\nexport class ProyectsComponent implements OnInit {\n  // Users\n  userAuthUid: string;\n  \n  proyects = [];\n\n  constructor(\n    private router: Router,\n    private firestoreService: FirestoreService,\n    private cookieService: CookieService,\n  ) {\n    this.userAuthUid = this.cookieService.get('uid');\n   }\n\n  ngOnInit(): void {\n    this.getProyects();\n  }\n\n  getProyects() {\n    this.proyects = [];\n    this.firestoreService.getProyectsByCreated(this.userAuthUid)\n      .then((query: QuerySnapshot < any > ) => {\n        query.docs.forEach((doc: QueryDocumentSnapshot < any > ) => {\n          const service = doc.data();\n          service.uid = doc.id;\n          this.proyects.push(service);\n        });\n      });\n    console.log(this.proyects)\n  }\n\n  addProyect(){\n    this.router.navigate(['./admin/proyects/new']);\n  }\n\n  goEdit(proyect){\n    this.router.navigate(['./admin/proyects/edit', true], {\n      state: proyect\n    });\n  }\n\n  statusServiceUpdate(uid:any, status){\n    const Info = {\n      status: status,\n      updateBy: this.userAuthUid,\n      updateDate: new Date()\n    }\n    this.firestoreService.updateProyects(Info, uid).then(() => {\n      this.successAlert('Proyecto Actualizado', 'El proyecto fue actualizado con exito.');\n      this.getProyects();  \n    });\n  }\n\n  successAlert(title: string, body: string) {\n    Swal.fire(\n      title,\n      body,\n      'success'\n    ).then((resp => {\n      this.router.navigate(['./admin/proyects'])\n    }))\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <label class=\"col-sm-2 col-form-label title\">Proyectos</label>\n            <div class=\"row\">\n                <select class=\"form-control input\" id=\"uidUser\">\n                    <option hidden value=\"\" selected>ACCIONES EN LOTE</option>\n                    <option value=\"user\">Accion 1</option>\n                    <option value=\"user\">Accion 2</option>\n                    <option value=\"user\">Accion 3</option>\n                </select> &nbsp;\n                <button class=\"btn boton\">APLICAR</button>\n                <button class=\"btn boton2\" (click)=\"addProyect()\">AÑADIR PROYECTO</button>\n            </div>\n            <div class=\"table-responsive table_use\">\n                <table class=\"table\" id=\"excel-table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Proyecto</th>\n                            <th scope=\"col\">Empresa - Sucursal</th>\n                            <th scope=\"col\">Encargado de proyecto</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Opciones</th>\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let proyect of proyects; index as i\"> \n                        <tr>\n                            <th scope=\"row\"> {{i+1}} </th>\n                            <td> {{ proyect.proyectName }} </td>\n                            <td class=\"file-open\">Empresa: {{ proyect.business.business.name }} - Sucursal: {{ proyect.business.name }} </td>\n                            <td> {{ proyect.proyectManager }} </td>\n                            <td *ngIf=\"proyect.status === 1\" class=\"active\">Activo</td>\n                            <td *ngIf=\"proyect.status === 0\" class=\"cancel\">Cancelado</td>                            <!-- <td >Administrador</td> -->\n                            <td>\n                                <!-- <app-feather-icons class=\"icon-edit\" icon=\"edit\"></app-feather-icons> &nbsp; -->\n                                <app-feather-icons (click)=\"goEdit(proyect)\" style=\"color: blue;\" icon=\"edit\"></app-feather-icons> &nbsp;\n                                <app-feather-icons *ngIf=\"proyect.status === 0\" (click)=\"statusServiceUpdate(proyect.uid, 1)\" style=\"color: red;\" icon=\"minus-circle\"></app-feather-icons>\n                                <app-feather-icons *ngIf=\"proyect.status === 1\" (click)=\"statusServiceUpdate(proyect.uid, 0)\" style=\"color: green;\" icon=\"plus-circle\"></app-feather-icons>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    </div>\n</div>"]}